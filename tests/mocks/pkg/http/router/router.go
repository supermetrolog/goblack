// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/http/router/router.go

// Package mock_router is a generated GoMock package.
package mock_router

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	goblack "github.com/supermetrolog/goblack"
)

// MockPipelineFactory is a mock of PipelineFactory interface.
type MockPipelineFactory struct {
	ctrl     *gomock.Controller
	recorder *MockPipelineFactoryMockRecorder
}

// MockPipelineFactoryMockRecorder is the mock recorder for MockPipelineFactory.
type MockPipelineFactoryMockRecorder struct {
	mock *MockPipelineFactory
}

// NewMockPipelineFactory creates a new mock instance.
func NewMockPipelineFactory(ctrl *gomock.Controller) *MockPipelineFactory {
	mock := &MockPipelineFactory{ctrl: ctrl}
	mock.recorder = &MockPipelineFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPipelineFactory) EXPECT() *MockPipelineFactoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockPipelineFactory) Create() goblack.Pipeline {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create")
	ret0, _ := ret[0].(goblack.Pipeline)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockPipelineFactoryMockRecorder) Create() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockPipelineFactory)(nil).Create))
}
